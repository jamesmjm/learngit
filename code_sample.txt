
jmmao@DST61607 MINGW64 ~
$ git config --global user.name "jamesm"

jmmao@DST61607 MINGW64 ~
$ git config --global user.email "jamesm@126.com"

jmmao@DST61607 MINGW64 ~
$ mkdir learngit

jmmao@DST61607 MINGW64 ~
$ cd f:

jmmao@DST61607 MINGW64 /f
$ cd learngit

jmmao@DST61607 MINGW64 /f/learngit
$ pwd
/f/learngit

jmmao@DST61607 MINGW64 /f/learngit
$ git init
Initialized empty Git repository in F:/learngit/.git/

jmmao@DST61607 MINGW64 /f/learngit (master)
$ git add readme.txt

jmmao@DST61607 MINGW64 /f/learngit (master)
$ git commit -m 'wrote a readme file'
[master (root-commit) 21c04d5] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt



初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
?	第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
?	第二步，使用命令git commit，完成。

?	要随时掌握工作区的状态，使用git status命令。
?	如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

?	HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
?	穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
?	要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
你通常直接在文件管理器中把没用的文件删了，或者用rm命令删了：
现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit：
git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。

